{"version":3,"sources":["components/MainInfo/MainInfo.module.css","components/_share/Section/Section.module.css","components/_share/Button/Button.jsx","components/MainInfo/MainInfo.jsx","components/_share/Section/Section.jsx","components/pages/MainPage.jsx","components/_share/LabelInput/LabelInput.jsx","components/TransactionForm/TransactionForm.jsx","components/TransactionHeader/TransactionHeader.jsx","components/pages/TransactionPage.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Button","title","type","cbOnClick","onClick","MainInfo","dataMainInfo","btnTitle","transType","handleOpenTransaction","className","css","container","map","el","period","total","Section","children","section","costsMainInfo","mainInfoData","incomesMainInfo","balanceMainInfo","MainPage","LabelInput","name","value","cbOnChange","placeholder","label","onChange","TransactionForm","state","date","time","category","sum","currency","comment","handleDataChange","e","target","setState","handleFormSubmit","preventDefault","props","postTransaction","this","onSubmit","Component","TransactionHeader","transTitle","handleCloseTransaction","TransactionPage","transaction","dataFormLocStor","localStorage","getItem","data","JSON","parse","dataToLocStor","setItem","stringify","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9dac434.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainInfo_container__1YPjh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3ivOO\"};","const Button = ({title, type=\"button\", cbOnClick}) => {\r\n    return (\r\n        <button type={type} onClick={cbOnClick}>\r\n            {title}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react';\r\nimport Button from '../_share/Button/Button';\r\nimport css from './MainInfo.module.css';\r\n\r\nconst MainInfo = ({\r\n    dataMainInfo,\r\n    title,\r\n    btnTitle,\r\n    transType,\r\n    handleOpenTransaction\r\n}) => {\r\n\r\n    const cbOnClick = () => handleOpenTransaction(transType);\r\n    \r\n    return (\r\n        <section className={css.container}>\r\n            <h2>\r\n         {title} \r\n            </h2>\r\n            <p>UAH</p>\r\n            <ul>\r\n                {dataMainInfo.map((el) => (\r\n                    <li key={el.period}>\r\n                        <span>{el.period}</span>\r\n                        <span>{el.total}</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <Button title={btnTitle} cbOnClick={cbOnClick} />\r\n        </section>\r\n    )\r\n}\r\n\r\n// const MainInfo = ({\r\n//     title,\r\n//     currency = 'UAH',\r\n//     dataInfo,\r\n//     transType,\r\n//     handleOpenTransaction }) => {\r\n//     return (\r\n//         <section className={css.container}>\r\n//             <h2>{ title}</h2>\r\n//             <button onClick={()=>handleOpenTransaction(transType)}>Add</button>\r\n//             <span>{currency}</span>\r\n//             <ul>\r\n//                 {dataInfo &&\r\n//                     dataInfo.map((el) => (\r\n//                      <li key={el.period}>\r\n//                          <span>{el.period}</span>\r\n//                          <span>{el.total}</span>\r\n//                     </li>\r\n//                  ))}\r\n//             </ul>\r\n//         </section>\r\n//     )\r\n// }\r\n\r\nexport default MainInfo\r\n\r\n","import React from \"react\";\r\nimport css from './Section.module.css'\r\n\r\nconst Section = ({ children }) => {\r\n    return <section className={css.section}>\r\n        {children}\r\n    </section>\r\n};\r\n\r\nexport default Section;\r\n","import MainInfo from '../MainInfo/MainInfo';\r\nimport Button from '../_share/Button/Button';\r\nimport Section from '../_share/Section/Section';\r\nimport mainInfoData from '../../assets/mainInfoData.json';\r\n\r\nconst {costsMainInfo, incomesMainInfo, balanceMainInfo\r\n} = mainInfoData\r\n\r\nconst MainPage = ({ handleOpenTransaction }) => {\r\n    return <Section>\r\n        <h1>Журнал расходов-Expense journal</h1>\r\n        <MainInfo \r\n            btnTitle={\"Add\"} \r\n            title=\"Расходы-Costs\" \r\n            dataMainInfo={costsMainInfo}\r\n            transType=\"costs\"\r\n            handleOpenTransaction={handleOpenTransaction}\r\n        />\r\n\r\n        <MainInfo \r\n            btnTitle={\"Add\"}\r\n            title=\"Доходы-Incomes\" \r\n            dataMainInfo={incomesMainInfo}\r\n            transType=\"incomes\"\r\n            handleOpenTransaction={handleOpenTransaction}\r\n        />\r\n\r\n        <MainInfo \r\n            btnTitle={\"ShowBalance\"} \r\n            title=\"Баланс-Balance\" \r\n            dataMainInfo={balanceMainInfo}\r\n        />\r\n        \r\n        <Button title={ \"Все расходы\"} />\r\n        <Button title={ \"Все доходы\"}/>\r\n        </Section>\r\n    \r\n};\r\n// const { balanceInfoData, costsInfoData, incomesInfoData } = mainInfoData;\r\n\r\n// const MainPage = ({handleOpenTransaction}) => {\r\n//     return (\r\n//         <Section>\r\n//             <h1>Журнал расходов</h1>\r\n//             <MainInfo\r\n//                 transType=\"costs\"\r\n//                 title=\"Расходы\" \r\n//                 currency=\"UAH\"\r\n//                 dataInfo={costsInfoData}\r\n//                 handleOpenTransaction={handleOpenTransaction}\r\n//             />\r\n//             <MainInfo\r\n//                 transType=\"incomes\"\r\n//                 title=\"Доходы\" \r\n//                 currency=\"UAH\"\r\n//                 dataInfo={incomesInfoData}\r\n//                 handleOpenTransaction={handleOpenTransaction}\r\n//             />\r\n//             <MainInfo title=\"Баланс\" currency=\"UAH\" dataInfo={balanceInfoData}\r\n//             />\r\n//             <Button title= \"Все доходы\" />\r\n//             <Button title= \"Все расходы\" />\r\n//         </Section>\r\n//     )\r\n//  }\r\n\r\nexport default MainPage;","import React from \"react\";\nimport css from \"./LabelInput.module.css\";\n\nconst LabelInput = ({\n  title,\n  type = \"text\",\n  name,\n  value,\n  cbOnChange,\n  placeholder = \"\",\n}) => {\n  return (\n    <label className={css.label}>\n      <p>{title}</p>\n      <input\n        type={type}\n        name={name}\n        value={value}\n        onChange={cbOnChange}\n        placeholder={placeholder}\n      />\n    </label>\n  );\n};\n\nexport default LabelInput;\n","import React, { Component } from 'react'\r\nimport Button from '../_share/Button/Button';\r\nimport LabelInput from '../_share/LabelInput/LabelInput';\r\n\r\n\r\nexport default class TransactionForm extends Component {\r\n\r\n    state = {\r\n        date: \"\",\r\n        time: \"\",\r\n        category: \"\",\r\n        sum: \"\",\r\n        currency: \"\",\r\n        comment: \"\",\r\n    };\r\n\r\n    handleDataChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.postTransaction(this.state);\r\n        //  this.props.handlePostDataForm(this.state);\r\n  };\r\n    \r\n    render() {\r\n        //const { date, time, category, sum, currency, comment } = this.state;\r\n        const {date,time,sum,comment } = this.state;\r\n        return (\r\n        <form onSubmit={this.handleFormSubmit} >\r\n            <Button title=\"Ok\" type=\"submit\" />\r\n            <LabelInput\r\n                cbOnChange={this.handleDataChange} \r\n                type=\"date\" \r\n                title=\"День\" \r\n                name=\"date\" \r\n                value={date}\r\n                />\r\n            <LabelInput \r\n                cbOnChange={this.handleDataChange} \r\n                type=\"time\" \r\n                title=\"Время\" \r\n                name=\"time\" \r\n                value={time}\r\n                />\r\n            <LabelInput \r\n                cbOnChange={this.handleDataChange} \r\n                type=\"button\" \r\n                title=\"Категория\" \r\n                name=\"category\"\r\n                value=\"Eat\"\r\n                />\r\n            <LabelInput \r\n                cbOnChange={this.handleDataChange} \r\n                title=\"Сумма\"\r\n                name=\"sum\"\r\n                value={sum} \r\n                placeholder=\"Введите сумму\" \r\n                />\r\n            <LabelInput \r\n                cbOnChange={this.handleDataChange} \r\n                type=\"button\" \r\n                title=\"Валюта\" \r\n                name=\"currency\" \r\n                value=\"UAH\"\r\n                />\r\n            <LabelInput \r\n                cbOnChange={this.handleDataChange} \r\n                title=\"Комментарий\" \r\n                name=\"comment\" \r\n                value={comment}\r\n                placeholder=\"Комментарий\" \r\n                /> \r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\n// const TransactionForm = () => {\r\n//     return (\r\n//         <form>\r\n//             <LabelInput type=\"date\" title=\"День\" name=\"date\" value=\"\" />\r\n//             <LabelInput type=\"time\" title=\"Время\" name=\"time\" value=\"\" />\r\n//             <LabelInput type=\"button\" title=\"Категория\" name=\"category\" value=\"\" />\r\n//             <LabelInput title=\"Сумма\" name=\"sum\" value=\"\" placeholder=\"Введите сумму\" />\r\n//             <LabelInput type=\"button\" title=\"Валюта\" name=\"currency\" value=\"\" />\r\n//             <LabelInput title=\"Комментарий\" name=\"comment\" value=\"\" placeholder=\"Комментарий\" /> \r\n//         </form>\r\n//     );\r\n// };\r\n\r\n// export default TransactionForm;","import Button from \"../_share/Button/Button\";\n\nconst TransactionHeader = ({ transTitle, handleCloseTransaction }) => {\n  return (\n    <>\n      <Button\n        title=\"GoBack\"\n        cbOnClick={handleCloseTransaction}\n      />\n      <h1>{transTitle}</h1>\n    </>\n  );\n};\n// const TransactionHeader = ({ title, handleCloseTransaction }) => {\n//   return (\n//     <header>\n//       <Button\n//         title=\"GoBack\"\n//         cbOnClick={handleCloseTransaction}\n//       />\n//       <h1>{title}</h1>\n//     </header>\n//   );\n// };\n\nexport default TransactionHeader;\n","import React from 'react';\r\nimport TransactionForm from '../TransactionForm/TransactionForm';\r\nimport TransactionHeader from '../TransactionHeader/TransactionHeader';\r\nimport Section from '../_share/Section/Section';\r\n\r\nconst TransactionPage = ({transType, handleCloseTransaction}) => {\r\n   \r\n    const postTransaction = (transaction) => {\r\n        const dataFormLocStor = localStorage.getItem(transType);\r\n        const data = !dataFormLocStor ? [] : JSON.parse(dataFormLocStor);\r\n        const dataToLocStor = [...data, transaction];\r\n        localStorage.setItem(transType, JSON.stringify(dataToLocStor));\r\n        handleCloseTransaction();\r\n    }\r\n\r\n    // const handlePostDataForm = (dataForm) => {\r\n    //     const prevData = localStorage.getItem(transType);\r\n    //     const parsePrevData = JSON.parse(prevData);\r\n    //     const dataToLocStor = parsePrevData ? [...parsePrevData, dataForm] : [dataForm];\r\n    //     localStorage.setItem(transType, JSON.stringify(dataToLocStor));\r\n    //     handleCloseTransaction();\r\n    // };\r\n\r\n    return (\r\n        <Section>\r\n            <h1>TransactionPage</h1>\r\n            <TransactionHeader\r\n                // title={transType=== \"costs\" ? \"Расходы\" : \"Доходы\"}\r\n                transTitle={transType === \"costs\" ? \"Расходы\" : \"Доходы\"}\r\n                handleCloseTransaction={handleCloseTransaction}\r\n            />\r\n            <TransactionForm\r\n                postTransaction={postTransaction}\r\n                \r\n            />\r\n            {/* <TransactionForm handlePostDataForm={handlePostDataForm} /> */}\r\n        </Section>\r\n            \r\n        \r\n    );\r\n}; \r\n\r\nexport default TransactionPage;","import React, { Component } from \"react\";\nimport MainPage from \"../pages/MainPage\";\nimport TransactionPage from \"../pages/TransactionPage\";\nimport \"./App.css\";\n\n\n\nexport default class App extends Component {\n\n  state = {\n    transType: \"\",\n    // currentTransaction:\"\",\n  };\n\n  handleOpenTransaction = (transType) => {\n    this.setState({ transType: transType });\n  };\n  \n      //  handleOpenTransaction = (transType) => {\n      //    this.setState({ currentTransaction: transType });\n      //    };\n  handleCloseTransaction = () => {\n    this.setState({ transType: \"\" });\n  }; \n  \n  // handleCloseTransaction = () => {\n  //   this.setState({ currentTransaction: \"\" });\n  // };\n  \n  render() {\n    const {transType}=this.state\n    // const {currentTransaction}=this.state\n    return (\n      <>\n        \n        {!transType ? <MainPage\n          handleOpenTransaction={this.handleOpenTransaction} /> :\n          <TransactionPage\n            transType={transType}\n            handleCloseTransaction={this.handleCloseTransaction} />}\n        {/* {!currentTransaction ?\n          < MainPage handleOpenTransaction={this.handleOpenTransaction} /> :\n          < TransactionPage\n            transType={currentTransaction}\n            handleCloseTransaction={this.handleCloseTransaction}\n          />} */}\n      </>\n    );\n  }\n}\n\n\n// const App = () => {\n//   return<>\n//     <MainPage />\n//     <TransactionPage/>\n//   </>\n// };\n\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}